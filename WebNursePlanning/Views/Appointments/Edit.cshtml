@model DomainModel.Appointment
@using Microsoft.AspNetCore.Identity
@inject SignInManager<DomainModel.Person> SignInManager
@inject UserManager<DomainModel.Person> UserManager
@inject WebNursePlanning.Services.AppointmentsService MyAppointment

@{
    ViewData["Title"] = "Modification Rendez-vous";
}

<h1>Modification de votre rendez-vous</h1>

<hr />
<div class="row">

    <form asp-action="Edit">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <input type="hidden" asp-for="Id" />
        <div class="form-group">
            @await Component.InvokeAsync("EditAppointmentCalendar", new { personId = UserManager.GetUserId(User), appToEdit = new List<DomainModel.Appointment> { Model } })
        </div>
        <div class="form-group">
            <label asp-for="Description" class="control-label"></label>
            <input asp-for="Description" class="form-control" />
            <span asp-validation-for="Description" class="text-danger"></span>
        </div>
        <div class="form-group form-check">
            <label class="form-check-label">
                <input class="form-check-input" asp-for="AtHome" /> @Html.DisplayName("A domicile")
            </label>
        </div>
        @if (User.IsInRole("ROLE_ADMIN"))
        {//Si le l'utilisateur connecté est infirmier(role admin)
            <div class="form-group">
                <input asp-for="NurseId" class="form-control" style="display:none;" value="@UserManager.GetUserId(User)" />
            </div>
            <div class="form-group">
                <label asp-for="PatientId" class="control-label"></label>
                <select asp-for="PatientId" class="form-control"
                        asp-items="MyAppointment.GetSelectListPatientsAsync(Model.PatientId).GetAwaiter().GetResult()"></select>
            </div>
        }
        else if (User.IsInRole("ROLE_USER"))
        {//Si l'utilisateur est un patient (role user)
            <div class="form-group">
                <label asp-for="NurseId" class="control-label"></label>
                <select asp-for="NurseId" class="form-control"
                        asp-items="MyAppointment.GetSelectListNursesAsync(Model.NurseId).GetAwaiter().GetResult()"></select>
            </div>
            <div class="form-group">
                @*<label asp-for="PatientId" class="control-label"></label>*@
                @*<select asp-for="PatientId" class="form-control" asp-items="ViewBag.PatientId"></select>*@
                <input asp-for="PatientId" class="form-control" style="display:none;" value="@UserManager.GetUserId(User)" />
            </div>
        }
        <div class="form-group">
            <label class="control-label">Statut</label>
            <select asp-for="StatusId" class="form-control" asp-items="ViewBag.StatusId"></select>
            <span asp-validation-for="StatusId" class="text-danger"></span>
        </div>
        <div class="form-group">
            <input type="submit" value="Sauvegarder" class="btn btn-primary" />
        </div>
    </form>
</div>

<div>
    <a asp-action="Index">Retour à la liste</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}